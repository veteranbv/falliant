name: Bump Version

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version type to bump (major, minor, patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          echo "Current version: $VERSION"
          echo "current_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=${{ steps.get_version.outputs.current_version }}
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          if [[ "${{ github.event.inputs.version_type }}" == "major" ]]; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif [[ "${{ github.event.inputs.version_type }}" == "minor" ]]; then
            NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
          else
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi

          python -c "
          import toml
          data = toml.load('pyproject.toml')
          data['project']['version'] = '$NEW_VERSION'
          with open('pyproject.toml', 'w') as f:
              toml.dump(data, f)
          "

          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          title: "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          body: |
            This PR bumps the version from ${{ steps.get_version.outputs.current_version }} to ${{ steps.bump_version.outputs.new_version }}

            Type: ${{ github.event.inputs.version_type }}
          branch: "bump-version-${{ steps.bump_version.outputs.new_version }}"
          base: "main"
